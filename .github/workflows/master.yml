name: Deploy Master Workflow
on:
  push:
    branches:
      - master
  schedule:
    - cron: "0 0 * * 0"
jobs:
  build-wasm:
    name: Build WASM
    timeout-minutes: 30
    strategy:
      matrix:
        rust-version: ["1.65.0"]
        node-version: ["16"]
    runs-on: ubuntu-latest
    container: rust:${{ matrix.rust-version }}
    steps:
      - uses: actions/checkout@v1
      - run: |
          rustup component add rustfmt
          rustup component add clippy
        name: Install Rust components
      - run: rustc --version
        name: Print Rust information
      - run: cargo fmt --all -- --check
        name: Verify Rust code format
      - run: cargo clippy -- -D warnings -A unknown-lints
        name: Verify Rust code linting
      - run: cargo install wasm-pack
        name: Install wasm-pack
      - run: wasm-pack build --release --target=web --out-dir=frontends/web/lib -- --features wasm
      - run: |
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
          nvm install stable
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
        name: Install Node.js
      - run: cd frontends/web && npm install && npm run build && npm run lint
        name: Build and lint Web code
      - run: |
          cd frontends/web/dist
          cp -rp ../static/* .
          npm_config_yes=true npx wrangler pages publish . --project-name=battlerust --branch master
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        name: Deploy packages to Cloudfare (master)
