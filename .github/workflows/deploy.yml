name: Deploy Workflow
on:
  push:
    tags:
      - "*"
jobs:
  build:
    name: Build
    timeout-minutes: 30
    strategy:
      matrix:
        rust-version: ["1.71.0"]
    runs-on: ubuntu-latest
    container: rust:${{ matrix.rust-version }}
    steps:
      - name: Checkout code from repository
        uses: actions/checkout@v3
      - name: Install Rust components
        run: |
          rustup component add rustfmt
          rustup component add clippy
      - name: Print Rust information
        run: rustc --version
      - name: Verify Rust code format
        run: cargo fmt --all -- --check
      - name: Verify Rust code linting
        run: cargo clippy -- -D warnings -A unknown-lints
      - name: Run unit tests
        run: cargo test
      - name: Deploy package to Crates
        run: |
          cargo login $CRATES_TOKEN
          cargo publish --no-verify
        env:
          CRATES_TOKEN: ${{ secrets.CRATES_TOKEN }}
  build-wasm:
    name: Build WASM
    timeout-minutes: 30
    strategy:
      matrix:
        rust-version: ["1.74.0"]
        node-version: ["16"]
    runs-on: ubuntu-latest
    container: rust:${{ matrix.rust-version }}
    steps:
      - name: Checkout code from repository
        uses: actions/checkout@v3
      - name: Install Rust components
        run: |
          rustup component add rustfmt
          rustup component add clippy
      - name: Print Rust information
        run: rustc --version
      - name: Verify Rust code format
        run: cargo fmt --all -- --check
      - name: Verify Rust code linting
        run: cargo clippy -- -D warnings -A unknown-lints
      - name: Run unit tests
        run: cargo test
      - name: Install wasm-pack
        run: cargo install wasm-pack
      - name: Build WASM Web binary
        run: wasm-pack build --release --target=web --out-dir=frontends/web/lib -- --features wasm
      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Build and lint Web code
        run: cd frontends/web && npm install && npm run build && npm run lint
      - name: Deploy package to NPM
        run: |
            echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
            cd frontends/web/lib && npm publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Deploy package to Cloudflare (main)
        run: |
          cd frontends/web/dist
          cp -rp ../static/* .
          npm_config_yes=true npx --loglevel verbose wrangler pages deploy . --project-name=battlerust --branch main
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
