name: Deploy Workflow
on:
  push:
    tags:
      - "*"
jobs:
  build:
    name: Build
    timeout-minutes: 30
    strategy:
      matrix:
        rust-version: ["1.65.0"]
    runs-on: ubuntu-latest
    container: rust:${{ matrix.rust-version }}
    steps:
      - uses: actions/checkout@v1
      - run: |
          rustup component add rustfmt
          rustup component add clippy
      - run: rustc --version
      - run: cargo fmt --all -- --check
      - run: cargo clippy -- -D warnings -A unknown-lints
      - run: |
          cargo login $CRATES_TOKEN
          cargo publish --no-verify
        env:
          CRATES_TOKEN: ${{ secrets.CRATES_TOKEN }}
  build-wasm:
    name: Build WASM
    timeout-minutes: 30
    strategy:
      matrix:
        rust-version: ["1.65.0"]
    runs-on: ubuntu-latest
    container: rust:${{ matrix.rust-version }}
    steps:
      - uses: actions/checkout@v1
      - run: |
          rustup component add rustfmt
          rustup component add clippy
      - run: rustc --version
      - run: cargo fmt --all -- --check
      - run: cargo clippy -- -D warnings -A unknown-lints
      - run: cargo install wasm-pack
      - run: wasm-pack build --release --target=web --out-dir=frontends/web/lib -- --features wasm
      - run: apt-get update && apt-get install -y -q nodejs npm
      - run: cd frontends/web && npm install && npm run build && npm run lint
      - run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
          cd frontends/web/lib && npm publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
